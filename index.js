const {gameOptions, againOptions, infoOptions, serialOptions, backOptions} = require("./options"); //keybords
const TelegramApi = require('node-telegram-bot-api');
const axios = require("axios");
const {TOKEN, START, INFO, GAME, AUDIO, CLOSE, ABOUT, SERIAL, GID, AGAIN, seasons, BACK} = require('./helpers'); //commands
const fs = require('fs');
const {season_1, season_2, season_3, season_4, season_5, season_6} = require('./data/database.js') //data



const bot = new TelegramApi(TOKEN,  {polling: true})
const chats = {}


//basic functions (message, callback_query, inline_query)
async function getMessage(message) {
    const text = message.text
    const chatId = message.chat.id
    let WEATHER = message.location?.latitude
    if(WEATHER) {
        const lat = message.location.latitude
        const lon = message.location.longitude
        return  getWeather(lat, lon, chatId)
    }

    switch(text) {
        case START:
            let answer = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å ${message.from.first_name}. –°—Ä–∞–∑—É –æ–±–æ–∑–Ω–∞—á—É: —è –Ω–µ –∞–¥–≤–æ–∫–∞—Ç –ø–æ –∫—Ä–∏–º–∏–Ω–∞–ª—É, —è –∫—Ä–∏–º–∏–Ω–∞–ª—å–Ω—ã–π –∞–¥–≤–æ–∫–∞—Ç. –°–º–µ–∫–∞–µ—à—å?`
            await bot.sendPhoto(chatId, 'https://damion.club/uploads/posts/2022-09/1664202360_47-damion-club-p-sol-gudman-akter-oboi-55.jpg', {caption: answer})
            await bot.sendMessage(chatId, '–¢—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –∏–ª–∏ –º–µ–Ω—é —Å–ª–µ–≤–∞', infoOptions)
            break
        case INFO:
            await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ', infoOptions)
            break
        case CLOSE:
            await bot.sendMessage(chatId, '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã', {reply_markup: {remove_keyboard: true}})
            break
        case GAME:
            await setRandomNumber(chatId)
            break
        case AUDIO:
            await bot.sendMessage(chatId, '–ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ... –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è!')
            await fs.readFile(__dirname + '/audio/Better_Call_Saul.mp3', (err, data) => bot.sendAudio(chatId, data))
            break
        case ABOUT:
            await bot.sendMessage(chatId, `–¢—ã –Ω–∞–∑–≤–∞–ª—Å—è ${message.from.first_name}. –¢–≤–æ–π –Ω–∏–∫ - ${message.from.username} —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∫–ª—é—á–æ–º ${message.from.id}.`)
            break
        case SERIAL:
            await getInfoForSerial(chatId)
            break
        case GID:
            await getInfoForSerial(chatId)
            break
        case BACK:
            await getInfoForSerial(chatId)
            break
        default:
            await bot.sendMessage(chatId, `–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑!`)
            break
    }
}
async function checkCallbackQuery(message) {
    const chatId = message.message.chat.id
    const data = message.data

    if(data.includes('s')) {
        switch (data) {
            case seasons.one:
                await createHTMLCodeForSeries(season_1, chatId)
                break
            case seasons.two:
                await createHTMLCodeForSeries(season_2, chatId)
                break
            case seasons.three:
                await createHTMLCodeForSeries(season_3, chatId)
                break
            case seasons.four:
                await createHTMLCodeForSeries(season_4, chatId)
                break
            case seasons.five:
                await createHTMLCodeForSeries(season_5, chatId)
                break
            case seasons.six:
                await createHTMLCodeForSeries(season_6, chatId)
                break
            default:
                await createHTMLCodeForSeries(season_1, chatId)
                break
        }
    } else {
        if(+data === chats[chatId]) {
            await bot.sendMessage(chatId, `–û—Ç–ª–∏—á–Ω–æ! –ò–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏....`)
            await bot.sendPhoto(chatId, 'https://1.bp.blogspot.com/-PIMlFtsKC_Q/YCeskVVEtfI/AAAAAAAAB_8/htN70Xz4fc8FXC-d0Jdz-rIqNZJ_PdvRACLcBGAsYHQ/w640-h360/8m6c3kilrar31.jpg')
            return bot.sendMessage(chatId, 'ü•á –ò —ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç!!! –£ —Ç–µ–±—è —á—É–π–∫–∞ –∞–¥–≤–æ–∫–∞—Ç–∞! üé∫', againOptions)
        } else if (data === AGAIN) {
            await bot.answerCallbackQuery(message.id, `–°—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑`)
            return setRandomNumber(chatId)
        } else {
            await bot.sendMessage(chatId, `–û—Ç–ª–∏—á–Ω–æ! –ò–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏–∏....`)
            await bot.sendPhoto(chatId, 'https://sun9-12.userapi.com/impg/73e1v8_Lg8rlm94LC-I2VILWbQl8MrGjxAklvg/TxQWYC2u1nc.jpg?size=200x133&quality=96&crop=98,0,1083,720&sign=6fe8966ee5b28039139ab42491210e4b&c_uniq_tag=u4WfyCy-GBoZ4YrV82PjapzvxHKWMuRWoinNysHpDdE&type=album')
            return bot.sendMessage(chatId, `–ò —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç( –Ø –∑–∞–≥–∞–¥–∞–ª —Ü–∏—Ñ—Ä—É ${chats[chatId]}.`, againOptions)
        }
    }
}
function setInlineQueryParams(query) {
    let results = [{type: 'photo', id: 1, title: "–õ—É—á—à–µ –∑–≤–æ–Ω–∏—Ç–µ —Å–æ–ª—É", description: "–õ—É—á—à–µ –∑–≤–æ–Ω–∏—Ç–µ —Å–æ–ª—É", caption: "–õ—É—á—à–µ –∑–≤–æ–Ω–∏—Ç–µ —Å–æ–ª—É", photo_url: season_1[0].picture, thumb_url: season_1[0].picture, reply_markup: {inline_keyboard: [[{text: "–°–º–æ—Ç—Ä–µ—Ç—å", url: 'https://call-saul.online/'}]]}}]
    bot.answerInlineQuery(query.id, results, {cache_time: 0})
}



//auxiliary functions
async function getInfoForSerial(chatId) {
    return bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏ —Å–µ–∑–æ–Ω', serialOptions)
}
async function createHTMLCodeForSeries(season, chatId) {
    let i = 0
    while (i < season.length) {
        let html = `<b>–°–µ—Ä–∏—è ${i + 1}: ${season[i].name}</b> \n<code>–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: ${season[i].date}</code> \n–†–µ–π—Ç–∏–Ω–≥: <b>${season[i].rate}</b> \n <pre>${season[i].desc}</pre> \n <a href="${season[i].link}">C–º–æ—Ç—Ä–µ—Ç—å</a>`;
        await bot.sendPhoto(chatId, season[i].link, {caption: html, parse_mode: 'HTML'})
        i++
    }
    return bot.sendMessage(chatId, '–¢—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥—Ä—É–≥–æ–π —Å–µ–∑–æ–Ω', backOptions)
}
async function setRandomNumber(id) {
    await bot.sendMessage(id, 'C–µ–π—á–∞—Å —è –∑–∞–≥–∞–¥–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5, –∞ —Ç—ã –µ–≥–æ –æ—Ç–≥–∞–¥–∞–π!');
    let randomNumber = Math.floor(Math.random() * 6);
    chats[id] = randomNumber;
    await bot.sendMessage(id, '–ì–æ—Ç–æ–≤–æ! –ú–æ–∂–µ—à—å –Ω–∞—á–∏–Ω–∞—Ç—å!', gameOptions);
}
async function getWeather(latitude, longitude, chatId) {
    try {
        const url = `http://api.weatherapi.com/v1/current.json?key=4c07b8ea3a3e41ca84a204641230902&q=${latitude}&q=${longitude}&aqi=no`
        let responce = await axios.get(url)
        const data = responce.data
        let answer = `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã ${data.current.last_updated || '-'}.\n –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è ${data.location.localtime || '-'}, –∑–∞ –æ–∫–Ω–æ–º ${data.current.is_day ? '–¥–µ–Ω—å' : '–Ω–æ—á—å'}.\n –¢—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ ${data.location.region || '-'} –Ω–µ–¥–∞–ª–µ–∫–æ –æ—Ç ${data.location.name || '-'}.\n –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ ${data.current.temp_c || '-'} –≥—Ä–∞–¥—É—Å–æ–≤, –æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${data.current.feelslike_f || '-'}.\n –í–µ—Ç–µ—Ä ${data.current.wind_kph || '-'} –∫–º/—á.`
        await bot.sendMessage(chatId, answer)
    } catch (e) {
        console.error(e)
    }
}



//handlers bot
function init() {
    bot.setMyCommands([
        {command: INFO, description: '–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏'},
        {command: GAME, description: '–ò–≥—Ä–∞—Ç—å —Å–æ –º–Ω–æ–π –≤ –∏–≥—Ä—É'},
        {command: AUDIO, description: '–ü–æ–ª—É—á–∏—Ç—å –≥–æ–¥–Ω–æ—Ç—É'},
        {command: GID, description: '–ì–∏–¥ –ø–æ —Å–µ—Ä–∏–∞–ª—É'},
    ])
    bot.on('message', getMessage)
    bot.on('callback_query', checkCallbackQuery)
    bot.on('inline_query', setInlineQueryParams)
}
init()


